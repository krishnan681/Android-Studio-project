import React from 'react';
import { View, Text, Image, TouchableOpacity, StyleSheet, ScrollView, Dimensions } from 'react-native';

const { width } = Dimensions.get('window'); // Get device width

const Home = () => {
  return (
    <ScrollView contentContainerStyle={styles.home_container}>
      <View style={styles.home_card}>
        {/* Image Section */}
        <View style={styles.home_imageContainer}>
          <Image
            source={{ uri: 'https://w.wallhaven.cc/full/6q/wallhaven-6q3wyx.jpg' }}
            style={styles.home_image}
            resizeMode="cover"
          />
        </View>

        {/* Content Section */}
        <View style={styles.home_content}>
          <Text style={styles.home_title}>Business Name</Text>
          <Text style={styles.home_subtitle}>Product</Text>

          {/* Buttons */}
          <View style={styles.home_buttonContainer}>
            <TouchableOpacity style={styles.home_inviteButton}>
              <Text style={styles.home_inviteButtonText}>Share</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.home_chatButton}>
              <Text style={styles.home_chatButtonText}>Chat with Us</Text>
            </TouchableOpacity>
          </View>

          {/* Contact Section */}
          <View style={styles.home_contactSection}>
            <Text style={styles.home_contactTitle}>Contact Us</Text>
            <Text style={styles.home_contactText}>
              My Site is where you can share posts, stay updated, and chat with others in my community.
            </Text>
          </View>

          {/* Gallery & Message Button */}
          <View style={styles.home_messageContainer}>
            <Text style={styles.home_siteText}>My Gallery</Text>
            <TouchableOpacity style={styles.home_messageButton}>
              <Text style={styles.home_messageButtonText}>Message</Text>
            </TouchableOpacity>
          </View>

          {/* Photos Section */}
          <Text style={styles.home_profileName}>Photos</Text>
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  home_container: {
    flexGrow: 1,
    backgroundColor: '#F3F4F6',
  },
  home_card: {
    width: width, // Full width
    backgroundColor: '#FFFFFF',
    borderRadius: 0, // Removed rounded corners for a full-width look
    overflow: 'hidden',
  },
  home_imageContainer: {
    width: '100%',
  },
  home_image: {
    width: '100%',
    height: 200,
  },
  home_content: {
    padding: 16,
    backgroundColor: '#FCE7F3',
  },
  home_title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#1F2937',
    marginBottom: 8,
  },
  home_subtitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#6B21A8',
    marginBottom: 16,
  },
  home_buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  home_inviteButton: {
    backgroundColor: 'white',
    borderColor: '#6B21A8',
    borderWidth: 1,
    borderRadius: 20,
    paddingVertical: 8,
    paddingHorizontal: 16,
  },
  home_inviteButtonText: {
    color: '#6B21A8',
    fontWeight: 'bold',
  },
  home_chatButton: {
    backgroundColor: '#EF4444',
    borderRadius: 20,
    paddingVertical: 8,
    paddingHorizontal: 16,
  },
  home_chatButtonText: {
    color: 'white',
    fontWeight: 'bold',
  },
  home_contactSection: {
    marginBottom: 16,
  },
  home_contactTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1F2937',
    marginBottom: 8,
  },
  home_contactText: {
    color: '#4B5563',
    textAlign: 'center',
  },
  home_messageContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: 16,
  },
  home_siteText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1F2937',
  },
  home_messageButton: {
    backgroundColor: 'white',
    borderColor: '#6B21A8',
    borderWidth: 1,
    borderRadius: 20,
    paddingVertical: 4,
    paddingHorizontal: 16,
  },
  home_messageButtonText: {
    color: '#6B21A8',
    fontWeight: 'bold',
  },
  home_profileName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1F2937',
    textAlign: 'center',
    marginTop: 10,
  },
});

export default Home;



































































 <View style={styles.container}>
    
      {/* Business Name and Person Name */}
      <Text style={styles.title}>
        {selectedItem?.businessname || selectedItem?.person || 'Name not found'}
      </Text>

      {/* Product */}
      <Text style={styles.info}>Product: {selectedItem?.product}</Text>

      {/* Mobile Number */}
      <Text style={styles.info}>
        Mobile No: {selectedItem?.mobileno.slice(0, 5)}xxxxx
      </Text>

      {/* Address */}
      <Text style={styles.info}>
        Address: {selectedItem?.address}, {selectedItem?.city}, {selectedItem?.pincode}
      </Text>

      {/* Description */}
      <Text style={styles.info}>Description: {selectedItem?.description}</Text>

      {/* Contact Buttons */}
      <View style={styles.buttonRow}>
        <TouchableOpacity style={[styles.button, { backgroundColor: '#6A0DAD' }]} onPress={() => openDialpad(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>Dial</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#25D366' }]} onPress={() => openWhatsApp(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>WhatsApp</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#FF9900' }]} onPress={() => sendEmail(selectedItem?.email)}>
          <Text style={styles.buttonText}>Email</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#4285F4' }]} onPress={() => sendSMS(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>SMS</Text>
        </TouchableOpacity>
      </View>
    </View>
















































































import React from 'react';
import { View, Text, StyleSheet, Linking, TouchableOpacity } from 'react-native';
import Icon from 'react-native-vector-icons/MaterialIcons';

const Details = ({ route, navigation }) => {
  // Get the selected item passed from navigation
  const { selectedItem } = route.params;

  const openDialpad = number => {
    let phoneUrl = `tel:${number}`;
    Linking.openURL(phoneUrl).catch(() =>
      Alert.alert('Error', 'Dial pad not supported'),
    );
  };


  const openWhatsApp = number => {
    Linking.openURL(`https://wa.me/${number}`);
  };

  const sendEmail = email => {
    Linking.openURL(`mailto:${email}`);
  };

  const sendSMS = number => {
    Linking.openURL(`sms:${number}`);
  };

  return (
    <View style={styles.container}>
    
      {/* Business Name and Person Name */}
      <Text style={styles.title}>
        {selectedItem?.businessname || selectedItem?.person || 'Name not found'}
      </Text>

      {/* Product */}
      <Text style={styles.info}>Product: {selectedItem?.product}</Text>

      {/* Mobile Number */}
      <Text style={styles.info}>
        Mobile No: {selectedItem?.mobileno.slice(0, 5)}xxxxx
      </Text>

      {/* Address */}
      <Text style={styles.info}>
        Address: {selectedItem?.address}, {selectedItem?.city}, {selectedItem?.pincode}
      </Text>

      {/* Description */}
      <Text style={styles.info}>Description: {selectedItem?.description}</Text>

      {/* Contact Buttons */}
      <View style={styles.buttonRow}>
        <TouchableOpacity style={[styles.button, { backgroundColor: '#6A0DAD' }]} onPress={() => openDialpad(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>Dial</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#25D366' }]} onPress={() => openWhatsApp(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>WhatsApp</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#FF9900' }]} onPress={() => sendEmail(selectedItem?.email)}>
          <Text style={styles.buttonText}>Email</Text>
        </TouchableOpacity>

        <TouchableOpacity style={[styles.button, { backgroundColor: '#4285F4' }]} onPress={() => sendSMS(selectedItem?.mobileno)}>
          <Text style={styles.buttonText}>SMS</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

// Styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  backButton: {
    marginBottom: 20,
  },
  backButtonText: {
    fontSize: 18,
    color: '#6A0DAD',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  info: {
    fontSize: 16,
    marginBottom: 10,
  },
  buttonRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 20,
  },
  button: {
    flex: 1,
    padding: 10,
    marginHorizontal: 5,
    borderRadius: 5,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontWeight: 'bold',
  },
});

export default Details;

















































import React from 'react';
import { View, Text, Image, TouchableOpacity, StyleSheet, ScrollView, Dimensions } from 'react-native';
import Icon from 'react-native-vector-icons/MaterialIcons';

const Details = ( ) => {
  // Get the selected item passed from navigation
//   const { selectedItem } = route.params;

//   const openDialpad = number => {
//     let phoneUrl = `tel:${number}`;
//     Linking.openURL(phoneUrl).catch(() =>
//       Alert.alert('Error', 'Dial pad not supported'),
//     );
//   };


//   const openWhatsApp = number => {
//     Linking.openURL(`https://wa.me/${number}`);
//   };

//   const sendEmail = email => {
//     Linking.openURL(`mailto:${email}`);
//   };

//   const sendSMS = number => {
//     Linking.openURL(`sms:${number}`);
//   };
 

  return (
    <ScrollView contentContainerStyle={styles.home_container}>
    <View style={styles.home_card}>
      {/* Image Section */}
      <View style={styles.home_imageContainer}>
        <Image
          source={{ uri: 'https://w.wallhaven.cc/full/6q/wallhaven-6q3wyx.jpg' }}
          style={styles.home_image}
          resizeMode="cover"
        />
      </View>

      {/* Content Section */}
      <View style={styles.home_content}>
        <Text style={styles.home_title}>Business Name</Text>
        <Text style={styles.home_subtitle}>Product</Text>

        {/* Buttons */}
        <View style={styles.home_buttonContainer}>
          <TouchableOpacity style={styles.home_inviteButton}>
            <Text style={styles.home_inviteButtonText}>Share</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.home_chatButton}>
            <Text style={styles.home_chatButtonText}>Chat with Us</Text>
          </TouchableOpacity>
        </View>

        {/* Contact Section */}
        <View style={styles.home_contactSection}>
          <Text style={styles.home_contactTitle}>Contact Us</Text>
          <Text style={styles.home_contactText}>
            My Site is where you can share posts, stay updated, and chat with others in my community.
          </Text>
        </View>

        {/* Gallery & Message Button */}
        <View style={styles.home_messageContainer}>
          <Text style={styles.home_siteText}>My Gallery</Text>
          <TouchableOpacity style={styles.home_messageButton}>
            <Text style={styles.home_messageButtonText}>Message</Text>
          </TouchableOpacity>
        </View>

        {/* Photos Section */}
        <Text style={styles.home_profileName}>Photos</Text>
      </View>
    </View>
  </ScrollView>
  );
};

// Styles
const styles = StyleSheet.create({
    home_container: {
      flexGrow: 1,
      backgroundColor: '#F3F4F6',
    },
    home_card: {
      width: '100%', // Full width
      backgroundColor: '#FFFFFF',
      borderRadius: 0, // Removed rounded corners for a full-width look
      overflow: 'hidden',
    },
    home_imageContainer: {
      width: '100%',
    },
    home_image: {
      width: '100%',
      height: 200,
    },
    home_content: {
      padding: 16,
      backgroundColor: '#FCE7F3',
    },
    home_title: {
      fontSize: 24,
      fontWeight: 'bold',
      color: '#1F2937',
      marginBottom: 8,
    },
    home_subtitle: {
      fontSize: 18,
      fontWeight: '600',
      color: '#6B21A8',
      marginBottom: 16,
    },
    home_buttonContainer: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      marginBottom: 16,
    },
    home_inviteButton: {
      backgroundColor: 'white',
      borderColor: '#6B21A8',
      borderWidth: 1,
      borderRadius: 20,
      paddingVertical: 8,
      paddingHorizontal: 16,
    },
    home_inviteButtonText: {
      color: '#6B21A8',
      fontWeight: 'bold',
    },
    home_chatButton: {
      backgroundColor: '#EF4444',
      borderRadius: 20,
      paddingVertical: 8,
      paddingHorizontal: 16,
    },
    home_chatButtonText: {
      color: 'white',
      fontWeight: 'bold',
    },
    home_contactSection: {
      marginBottom: 16,
    },
    home_contactTitle: {
      fontSize: 18,
      fontWeight: 'bold',
      color: '#1F2937',
      marginBottom: 8,
    },
    home_contactText: {
      color: '#4B5563',
      textAlign: 'center',
    },
    home_messageContainer: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      marginTop: 16,
    },
    home_siteText: {
      fontSize: 16,
      fontWeight: 'bold',
      color: '#1F2937',
    },
    home_messageButton: {
      backgroundColor: 'white',
      borderColor: '#6B21A8',
      borderWidth: 1,
      borderRadius: 20,
      paddingVertical: 4,
      paddingHorizontal: 16,
    },
    home_messageButtonText: {
      color: '#6B21A8',
      fontWeight: 'bold',
    },
    home_profileName: {
      fontSize: 18,
      fontWeight: 'bold',
      color: '#1F2937',
      textAlign: 'center',
      marginTop: 10,
    },
  });

export default Details;














































































import React, {useEffect, useState} from 'react';
import {
  View,
  Text,
  FlatList,
  StyleSheet,
  ActivityIndicator,
  Alert,
  TextInput,
  TouchableOpacity,
  Linking,
  Modal,
} from 'react-native';

import Icon from "react-native-vector-icons/Ionicons";

const Home = () => {
  const [data, setData] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [firmName, setFirmName] = useState('');
  const [productName, setProductName] = useState('');
  const [modalVisible, setModalVisible] = useState(false);
  const [selectedItem, setSelectedItem] = useState(null);

  const fetchData = async () => {
    try {
      const response = await fetch(
        'https://signpostphonebook.in/client_fetch_for_new_database.php',
      );
      if (!response.ok)
        throw new Error(`HTTP Error! Status: ${response.status}`);
      const jsonResponse = await response.json();
      if (Array.isArray(jsonResponse)) {
        const sortedData = jsonResponse.sort((a, b) => b.id - a.id);
        setData(sortedData);
        setFilteredData(sortedData);
      } else {
        Alert.alert('Error', 'Unexpected response from server.');
      }
    } catch (error) {
      Alert.alert('Error', 'Failed to load data: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  useEffect(() => {
    let filtered = data;
    if (firmName) {
      filtered = data.filter(item =>
        item.businessname?.toLowerCase().includes(firmName.toLowerCase()),
      );
    } else if (productName) {
      filtered = data.filter(item =>
        item.product?.toLowerCase().includes(productName.toLowerCase()),
      );
    }
    setFilteredData(filtered);
  }, [firmName, productName, data]);

  const openDialpad = number => {
    let phoneUrl = `tel:${number}`;
    Linking.openURL(phoneUrl).catch(() =>
      Alert.alert('Error', 'Dial pad not supported'),
    );
  };

  const openModal = item => {
    setSelectedItem(item);
    setModalVisible(true);
  };

  const openWhatsApp = number => {
    Linking.openURL(`https://wa.me/${number}`);
  };

  const sendEmail = email => {
    Linking.openURL(`mailto:${email}`);
  };

  const sendSMS = number => {
    Linking.openURL(`sms:${number}`);
  };

  const closeModal = () => setModalVisible(false);

  const renderItem = ({item}) => (
    <View style={styles.card}>
      <View style={styles.cardRow}>
        <View style={styles.textContainer}>
          <Text style={styles.businessName}>
            {item.businessname || item.person || 'Name not found'}
          </Text>

          {/* Show the firm name if available */}
          {/* {item.address && <Text style={styles.firmName}>{item.address}</Text>} */}

          {/* Show the product name if available */}
          {productName && (
            <Text style={styles.productName}>{item.product}</Text>
          )}

          {/* Show the location only if productName is not available */}
          {!productName && item.city && item.pincode && (
            <View style={styles.locationContainer}>
              <Text style={styles.locationText}>
                {item.city}, {item.pincode}
              </Text>
            </View>
          )}
        </View>

        <View style={styles.rightContainer}>
          {/* Masked mobile number */}
          {item.mobileno && (
            <Text style={styles.mobile}>{item.mobileno.slice(0, 5)}xxxxx</Text>
          )}

          <View style={styles.buttonContainer}>
            <TouchableOpacity
              style={styles.button}
              onPress={() => openDialpad(item.mobileno)}>
              <Text style={styles.buttonText}>Dial</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.detailButton}
              onPress={() => openModal(item)}>
              <Text style={styles.buttonText}>More</Text>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </View>
  );

  if (loading) {
    return (
      <ActivityIndicator size="large" color="royalblue" style={styles.loader} />
    );
  }

  return (
    <View style={{flex: 1}}>
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          placeholder="Firm/Person"
          value={firmName}
          onChangeText={text => {
            setFirmName(text);
            setProductName('');
          }}
        />
        <TextInput
          style={styles.input}
          placeholder="Product"
          value={productName}
          onChangeText={text => {
            setProductName(text);
            setFirmName('');
          }}
        />
      </View>
      <FlatList
        data={filteredData}
        renderItem={renderItem}
        keyExtractor={item => item.id.toString()}
      />

      <Modal visible={modalVisible} transparent={true} animationType="slide">
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            {/* Close Button (Left Side) */}
            <TouchableOpacity style={styles.closeButton} onPress={closeModal}>
              <Text style={styles.modalButtonText}>✕</Text>
            </TouchableOpacity>

            {/* Heart Button (Right Side) */}
            <TouchableOpacity
              style={styles.heartButton}
              onPress={() => toggleFavorite(selectedItem)}>
              <Icon name="heart" size={24} color="red" />
            </TouchableOpacity>

            {/* Business Name  and person name*/}
            <Text style={styles.modalTitle}>
              {selectedItem?.businessname ||
                selectedItem?.person ||
                'Name not found'}
            </Text>
            {/* Product */}
            <View style={styles.modalRow}>
              <Text style={styles.modalValue}>
                Product: {selectedItem?.product}
              </Text>
            </View>
            {/* Mobile Number */}
            <View style={styles.modalRow}>
              <Text style={styles.modalValue}>
                Mobile No:{selectedItem?.mobileno.slice(0, 5)}xxxxx
              </Text>
            </View>
            {/* Address */}
            <View style={styles.modalRow}>
              <Text style={styles.modalValue}>
                Address: {selectedItem?.address}, {selectedItem?.city},{' '}
                {selectedItem?.pincode}
              </Text>
            </View>
            {/* Description */}
            <View style={styles.modalRow}>
              <Text style={styles.modalValue}>
                Description: {selectedItem?.description}
              </Text>
            </View>
            {/* Buttons Row */}
            <View style={styles.modalButtons}>
              <TouchableOpacity
                style={[styles.modalButton, {backgroundColor: '#6A0DAD'}]}
                onPress={() => openDialpad(selectedItem?.mobileno)}>
                <Text style={styles.buttonText}>Dial</Text>
              </TouchableOpacity>

              <TouchableOpacity
                style={[styles.modalButton, {backgroundColor: '#25D366'}]}
                onPress={() => openWhatsApp(selectedItem?.mobileno)}>
                <Text style={styles.buttonText}>WhatsApp</Text>
              </TouchableOpacity>

              <TouchableOpacity
                style={[styles.modalButton, {backgroundColor: '#FF9900'}]}
                onPress={() => sendEmail(selectedItem?.email)}>
                <Text style={styles.buttonText}>Email</Text>
              </TouchableOpacity>

              <TouchableOpacity
                style={[styles.modalButton, {backgroundColor: '#4285F4'}]}
                onPress={() => sendSMS(selectedItem?.mobileno)}>
                <Text style={styles.buttonText}>SMS</Text>
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  card: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 10,
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowRadius: 6,
    shadowOffset: {width: 0, height: 3},
    elevation: 4,
    margin: 10,
  },
  cardRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  textContainer: {
    flex: 1,
  },
  rightContainer: {
    alignItems: 'flex-end',
  },
  businessName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#6A0DAD',
  },
  locationText: {
    fontSize: 14,
    color: 'gray',
    marginTop: 5,
  },
  mobile: {
    fontSize: 16,
    color: '#333',
    marginBottom: 10,
  },
  buttonContainer: {
    flexDirection: 'row',
    gap: 10,
  },
  button: {
    backgroundColor: '#6A0DAD',
    paddingVertical: 8,
    paddingHorizontal: 15,
    borderRadius: 5,
    marginRight: 5,
  },
  detailButton: {
    backgroundColor: '#6A0DAD',
    paddingVertical: 8,
    paddingHorizontal: 15,
    borderRadius: 5,
  },
  buttonText: {
    color: '#fff',
    fontWeight: 'bold',
  },
  businessName: {fontSize: 18, fontWeight: 'bold'},
  locationText: {fontSize: 14, color: 'gray'},
  mobile: {fontSize: 16, color: '#333'},
  button: {
    backgroundColor: '#007bff',
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
  },
  detailButton: {
    backgroundColor: '#28a745',
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
  },
  buttonText: {color: '#fff', textAlign: 'center'},
  loader: {flex: 1, justifyContent: 'center', alignItems: 'center'},
  inputContainer: {flexDirection: 'row', padding: 10},
  input: {flex: 1, borderWidth: 1, borderRadius: 5, padding: 10, margin: 5},

  modalContainer: {
    flex: 1,
    justifyContent: 'flex-start', // Moves modalContent to the top
    alignItems: 'center',
    backgroundColor: 'white',
  },
  modalContent: {
    // backgroundColor: 'white',
    padding: 20,
    borderRadius: 10,
    width: '90%',
    marginTop: 50,
    position: 'relative',
    // elevation: 5,
  },
  closeButton: {
    position: 'absolute',
    top: 10,
    left: 10, // Move to the left side
    backgroundColor: '#ff0000',
    borderRadius: 20,
    width: 30,
    height: 30,
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 10,
  },
  modalTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#6A0DAD',
    // textAlign: 'center', // Center the title
  },

  heartButton: {
    position: 'absolute',
    top: 10,
    right: 10, // Move to the right side
    backgroundColor: 'transparent',
    borderRadius: 20,
    width: 30,
    height: 30,
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 10,
  },
  heartButtonText: {
    fontSize: 20,
  },
  modalRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 10,
  },
  modalLabel: {
    fontWeight: 'bold',
    color: '#555',
  },
  modalValue: {
    color: '#222',
  },
  modalButtons: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 20,
  },
  modalButton: {
    paddingVertical: 10,
    paddingHorizontal: 15,
    borderRadius: 5,
  },
  modalButtonText: {
    color: 'white',
    fontSize: 16,
  },
});

export default Home;






















































































































import React from "react";
import { View, Text, StyleSheet, Image, TouchableOpacity,  } from "react-native";
import Icon from "react-native-vector-icons/MaterialCommunityIcons";

const ProfileScreen = () => {
  return (
    <View style={styles.container}>
      {/* Header Section */}
      <View style={styles.header}>
        <TouchableOpacity>
          <Icon name="menu" size={28} color="#000" />
        </TouchableOpacity>
        <TouchableOpacity>
          <Icon name="pencil" size={24} color="#000" />
        </TouchableOpacity>
      </View>

      {/* Profile Info */}
      <View style={styles.profileSection}>
        <Image
          source={{ uri: "https://i.pravatar.cc/150?img=1" }} // Replace with your profile image
          style={styles.profileImage}
        />
        <Text style={styles.name}>John Doe</Text>
        <Text style={styles.username}>@j_doe</Text>
      </View>

      {/* Contact Info */}
      <View style={styles.contactInfo}>
        <View style={styles.contactRow}>
          <Icon name="map-marker" size={20} color="#666" />
          <Text style={styles.contactText}>Kolkata, India</Text>
        </View>
        <View style={styles.contactRow}>
          <Icon name="phone" size={20} color="#666" />
          <Text style={styles.contactText}>+91-9090909090</Text>
        </View>
        <View style={styles.contactRow}>
          <Icon name="email" size={20} color="#666" />
          <Text style={styles.contactText}>john_doe@email.com</Text>
        </View>
      </View>

      {/* Wallet & Orders Section */}
      <View style={styles.summarySection}>
        <View style={styles.summaryBox}>
          <Text style={styles.summaryValue}>$140.00</Text>
          <Text style={styles.summaryLabel}>Wallet</Text>
        </View>
        <View style={styles.summaryBox}>
          <Text style={styles.summaryValue}>12</Text>
          <Text style={styles.summaryLabel}>Orders</Text>
        </View>
      </View>

      {/* Menu Options */}
      <View style={styles.menuSection}>
        <MenuItem icon="heart-outline" text="Your Favorites" />
        <MenuItem icon="credit-card-outline" text="Payment" />
        <MenuItem icon="share-outline" text="Tell Your Friend" />
        <MenuItem icon="headset" text="Support" />
        <MenuItem icon="cog-outline" text="Settings" />
      </View>
    </View>
  );
};

// Menu Item Component
const MenuItem = ({ icon, text }) => (
  <TouchableOpacity style={styles.menuItem}>
    <Icon name={icon} size={22} color="#A52A2A" />
    <Text style={styles.menuText}>{text}</Text>
  </TouchableOpacity>
);

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#fff", padding: 20 },
  header: { flexDirection: "row", justifyContent: "space-between", marginBottom: 20 },
  profileSection: { alignItems: "center", marginBottom: 20 },
  profileImage: { width: 80, height: 80, borderRadius: 40, marginBottom: 10 },
  name: { fontSize: 20, fontWeight: "bold" },
  username: { fontSize: 16, color: "#777" },
  contactInfo: { marginBottom: 20 },
  contactRow: { flexDirection: "row", alignItems: "center", marginVertical: 5 },
  contactText: { fontSize: 16, marginLeft: 8, color: "#666" },
  summarySection: { flexDirection: "row", justifyContent: "space-between", backgroundColor: "#f8f8f8", borderRadius: 10, padding: 15, marginBottom: 20 },
  summaryBox: { alignItems: "center", flex: 1 },
  summaryValue: { fontSize: 18, fontWeight: "bold" },
  summaryLabel: { fontSize: 14, color: "#666" },
  menuSection: { marginTop: 10 },
  menuItem: { flexDirection: "row", alignItems: "center", paddingVertical: 12 },
  menuText: { fontSize: 16, marginLeft: 10, color: "#333" },
});

export default ProfileScreen;






























































import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const Profile = () => {
  return (
    <View style={styles.screen}>
      <Text style={styles.text}>👤 Profile Screen</Text>
    </View>
  );
};

const styles = StyleSheet.create({
  screen: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  text: {
    fontSize: 24,
    fontWeight: 'bold',
  },
});

export default Profile;





























































profile




import React from "react";
import { View, Text, Image, TouchableOpacity, ScrollView, StyleSheet } from "react-native";
import Icon from "react-native-vector-icons/FontAwesome";
import LinearGradient from "react-native-linear-gradient";

const UserProfile = () => {
  return (
    <View style={styles.container}>
      {/* Top Section */}
      <LinearGradient colors={["#1E3CFF", "#0052D4"]} style={styles.header}>
        <TouchableOpacity>
          <Icon name="arrow-left" size={20} color="#fff" style={styles.backIcon} />
        </TouchableOpacity>
        <Text style={styles.profileText}>Profile</Text>
        <TouchableOpacity>
          <Icon name="cog" size={20} color="#fff" style={styles.settingsIcon} />
        </TouchableOpacity>

        {/* Profile Image */}
        <Image
          source={{ uri: "https://cdn-icons-png.flaticon.com/512/3135/3135715.png" }}
          style={styles.profileImage}
        />
        <Text style={styles.userName}>James Martin</Text>
        <Text style={styles.userRole}>Senior Graphic Designer</Text>

        {/* Follow Stats */}
        <View style={styles.statsContainer}>
          <Text style={styles.statsText}>
            <Text style={styles.statsNumber}>1000</Text> Followers
          </Text>
          <Text style={styles.statsText}>
            <Text style={styles.statsNumber}>1200</Text> Following
          </Text>
        </View>
      </LinearGradient>

      {/* Contact Information */}
      <ScrollView style={styles.infoSection}>
        <View style={styles.infoRow}>
          <Icon name="envelope" size={20} color="#666" />
          <Text style={styles.infoText}>james012@gmail.com</Text>
        </View>
        <View style={styles.infoRow}>
          <Icon name="phone" size={20} color="#666" />
          <Text style={styles.infoText}>1234567891</Text>
        </View>
        <View style={styles.infoRow}>
          <Icon name="twitter" size={20} color="#1DA1F2" />
          <Text style={styles.infoText}>@james012</Text>
        </View>
        <View style={styles.infoRow}>
          <Icon name="behance" size={20} color="#1769FF" />
          <Text style={styles.infoText}>www.behance.net/james012</Text>
        </View>
        <View style={styles.infoRow}>
          <Icon name="facebook" size={20} color="#4267B2" />
          <Text style={styles.infoText}>www.facebook.com/james012</Text>
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#F8F9FA",
  },
  header: {
    alignItems: "center",
    paddingVertical: 30,
    borderBottomLeftRadius: 25,
    borderBottomRightRadius: 25,
  },
  backIcon: {
    position: "absolute",
    left: 20,
    top: 15,
  },
  settingsIcon: {
    position: "absolute",
    right: 20,
    top: 15,
  },
  profileText: {
    color: "#fff",
    fontSize: 18,
    fontWeight: "bold",
  },
  profileImage: {
    width: 80,
    height: 80,
    borderRadius: 40,
    marginTop: 10,
    borderWidth: 2,
    borderColor: "#fff",
  },
  userName: {
    color: "#fff",
    fontSize: 20,
    fontWeight: "bold",
    marginTop: 10,
  },
  userRole: {
    color: "#fff",
    fontSize: 14,
  },
  statsContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    width: "60%",
    marginTop: 15,
  },
  statsText: {
    color: "#fff",
    fontSize: 14,
  },
  statsNumber: {
    fontWeight: "bold",
    fontSize: 16,
  },
  infoSection: {
    padding: 20,
  },
  infoRow: {
    flexDirection: "row",
    alignItems: "center",
    paddingVertical: 10,
    borderBottomWidth: 1,
    borderBottomColor: "#ddd",
  },
  infoText: {
    marginLeft: 15,
    fontSize: 16,
    color: "#333",
  },
});

export default UserProfile;
















































































profile orignall


import React, {useState, useEffect, useContext} from 'react';
import {
  View,
  Text,
  Image,
  TouchableOpacity,
  StyleSheet,
  Alert,
  Modal,
  Button,
  ScrollView,
  MenuItem,
  TouchableWithoutFeedback,
} from 'react-native';
import Icon from 'react-native-vector-icons/MaterialCommunityIcons';
import {AuthContext} from './AuthContext';
import axios from 'axios';

const Profile = () => {
  const [taskCount, setTaskCount] = useState(0); // Task count (set to 0 instead of "")
  const [referralCount, setReferralCount] = useState(0);
  const {userData, setUserData} = useContext(AuthContext);
  const [profileImage, setProfileImage] = useState(null);
  const date = new Date().toISOString().split('T')[0];
  const [error, setError] = useState(null);
  const [membershipModalVisible, setMembershipModalVisible] = useState(false);
  const openMembershipModal = () => setMembershipModalVisible(true);
  const closeMembershipModal = () => setMembershipModalVisible(false);

  // profile image function

  useEffect(() => {
    const fetchProfileImage = async () => {
      if (!userData?.id) return;

      try {
        const response = await axios.get(
          `https://signpostphonebook.in/image_upload_for_new_database.php?id=${userData.id}`,
        );
        // console.log("Fetched Image Response:", response.data);

        if (response.data.success) {
          const imageUrl = response.data.imageUrl;
          const fullUrl = imageUrl.startsWith('http')
            ? imageUrl
            : `https://signpostphonebook.in/${imageUrl}`;
          setProfileImage(fullUrl + `?t=${new Date().getTime()}`); // Prevent caching
          setUserData(prevData => ({...prevData, profileImage: fullUrl}));
        }
      } catch (error) {
        console.error('Error fetching profile image:', error);
      }
    };

    fetchProfileImage();
  }, [userData.id, setUserData]);

  const handleImagePick = async () => {
    const {status} = await ImagePicker.requestMediaLibraryPermissionsAsync();
    if (status !== 'granted') {
      Alert.alert('Permission Denied', 'Please allow access to the gallery.');
      return;
    }

    const result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.Images,
      allowsEditing: true,
      aspect: [1, 1],
      quality: 1,
    });

    if (!result.canceled && result.assets?.length > 0) {
      const selectedImage = result.assets[0].uri;
      console.log('Selected Image URI:', selectedImage);
      setProfileImage(selectedImage);
      uploadImage(selectedImage);
    }
  };

  const uploadImage = async imageUri => {
    const formData = new FormData();
    formData.append('profileImage', {
      uri: imageUri,
      name: 'profile.jpg',
      type: 'image/jpeg',
    });
    formData.append('id', userData?.id);
    formData.append(
      'name',
      userData?.businessname || userData?.person || 'Unknown',
    );

    try {
      const response = await axios.post(
        'https://signpostphonebook.in/image_upload_for_new_database.php',
        formData,
        {headers: {'Content-Type': 'multipart/form-data'}},
      );

      //   console.log("Upload Response:", response.data);

      if (response.data.success) {
        const fullUrl = response.data.imageUrl.startsWith('http')
          ? response.data.imageUrl
          : `https://signpostphonebook.in/${response.data.imageUrl}`;

        setProfileImage(fullUrl + `?t=${new Date().getTime()}`); // Prevent caching
        setUserData(prevData => ({...prevData, profileImage: fullUrl}));
      } else {
        console.error('Upload failed:', response.data.message);
        Alert.alert('Upload Failed', response.data.message);
      }
    } catch (error) {
      console.error('Error uploading image:', error.message);
      Alert.alert(
        'Upload Error',
        'An error occurred while uploading the image.',
      );
    }
  };

  const fetchUserData = async (userid, date, signal) => {
    try {
      if (!userid || !date) {
        throw new Error('Please provide a valid ID and Date.');
      }

      const response = await fetch(
        `https://signpostphonebook.in/data_entry_details.php?userid=${userid}&date=${date}`,
        {signal}, // Attach the abort signal
      );

      if (!response.ok) {
        throw new Error(`HTTP Error: ${response.status}`);
      }

      const data = await response.json();

      if (data.status === 'success' && data.data) {
        return data.data;
      } else if (
        data.status === 'error' &&
        data.message === 'No record found.'
      ) {
        return {count: 0}; // Ensure frontend handles missing data correctly
      } else {
        throw new Error(data.message || 'Failed to fetch details.');
      }
    } catch (error) {
      if (error.name !== 'AbortError') {
        console.error('Error fetching user data:', error.message);
      }
      return null;
    }
  };

  useEffect(() => {
    if (!userData?.id || !date) {
      setError('Invalid user data or date.');
      return;
    }

    const controller = new AbortController();
    const signal = controller.signal;

    const getData = async () => {
      setIsLoading(true);
      const data = await fetchUserData(userData.id, date, signal);
      setIsLoading(false);

      if (data) {
        setTaskCount(data.count || 0); // Ensure count is handled even if 0
        setError(null);
      } else {
        setError('No data found.');
        setTaskCount(0); // Reset count if no data is found
      }
    };

    getData();
    if (typeof fetchReferralCount === 'function') {
      fetchReferralCount();
    }

    return () => controller.abort(); // Cancel fetch request on unmount
  }, [userData, date]);

  // Fetch referral count
  const fetchReferralCount = async () => {
    if (!userData?.mobileno) return;
    try {
      const response = await fetch(
        `https://signpostphonebook.in/try_referrals_count.php?mobile=${encodeURIComponent(
          userData.mobileno,
        )}`,
      );
      const data = await response.text();
      const match = data.match(/Total Referred: (\d+)/);
      if (match) setReferralCount(parseInt(match[1], 10));
    } catch (error) {
      setError('Failed to fetch referral count.');
    }
  };

  // style={styles.profileImage}

  return (
    <View style={styles.container}>
      {/* Profile Info */}
      <View style={styles.profileSection}>
        <TouchableOpacity onPress={handleImagePick} style={styles.profileImage}>
          <Image
            source={{
              uri: 'https://cdn-icons-png.flaticon.com/512/747/747376.png',
            }} // Camera icon
            style={styles.cameraIcon}
          />
        </TouchableOpacity>
        <Text style={styles.name}>
          {userData?.businessname || userData?.person || 'Your name'}
        </Text>
        {/* <Text style={styles.username}>@j_doe</Text> */}
      </View>
      <ScrollView>
        {/* Contact Info */}

        <View style={styles.contactInfo}>
          <View style={styles.contactRow}>
            <Icon name="phone" size={20} color="#666" />
            <Text style={styles.contactText}>
              {userData.description || 'description'}
            </Text>
          </View>

          <View style={styles.contactRow}>
            <Icon name="phone" size={20} color="#666" />
            <Text style={styles.contactText}>
              {userData.product || 'Product'}
            </Text>
          </View>

          <View style={styles.contactRow}>
            <Icon name="map-marker" size={20} color="#666" />
            <Text style={styles.contactText}>
              {userData.address || 'Address'}, {userData.city || 'City'},{' '}
              {userData.pincode || 'Pincode'}
            </Text>
          </View>

          <View style={styles.contactRow}>
            <Icon name="phone" size={20} color="#666" />
            <Text style={styles.contactText}>
              {userData.mobileno || 'Mobile No'}
            </Text>
          </View>

          <View style={styles.contactRow}>
            <Icon name="email" size={20} color="#666" />
            <Text style={styles.contactText}>{userData.email || 'Email'}</Text>
          </View>
        </View>

        {/* Wallet & Orders Section */}
        <View style={styles.summarySection}>
          <View style={styles.summaryBox}>
            <Text style={styles.summaryValue}>{taskCount}</Text>
            <Text style={styles.summaryLabel}>Total Count</Text>
          </View>
          <View style={styles.summaryBox}>
            <Text style={styles.summaryValue}>{referralCount}</Text>
            <Text style={styles.summaryLabel}>Referral Count</Text>
          </View>
        </View>

        {/* Menu Options */}
        {/* <View style={styles.menuSection}>
          <MenuItem icon="heart-outline" text="Your Favorites" />
          <MenuItem icon="credit-card-outline" text="Payment" />
          <MenuItem icon="share-outline" text="Tell Your Friend" />
          <MenuItem icon="headset" text="Support" />
          <MenuItem icon="cog-outline" text="Settings" />
        </View> */}

        <TouchableOpacity
          style={styles.openModalButton}
          onPress={openMembershipModal}>
          <Text style={styles.buttonText}>Membership Card</Text>
        </TouchableOpacity>

          {/* Membership Card Modal */}
          <Modal
          visible={membershipModalVisible}
          animationType="fade"
          transparent={true}
        >
          <View style={styles.overlay}>
            <View style={styles.modalContainer}>
              {/* Header Section */}
              <View style={styles.heaader}>
                <Image
                  source={require("../src/assets/images/Logo_Phonebook.jpg")}
                  style={styles.logo}
                />
                <Text style={styles.heaaderText}>SIGNPOST PHONE BOOK</Text>

                {/* Close Button */}
                <TouchableOpacity
                  style={styles.closeButton}
                  onPress={closeMembershipModal}
                >
                  <Text style={styles.closeButtonText}>X</Text>
                </TouchableOpacity>
              </View>

              {/* Membership Card Content */}
              <Text style={styles.membershipText}>Membership Card</Text>
              <View style={styles.cardContent}>
                <Image
                  source={{ uri: profileImage }}
                  style={styles.memprofileImage}
                />
                <View style={styles.userInfo}>
                  <Text style={styles.userName}>
                    {userData?.businessname || userData?.person}
                  </Text>
                  <Text style={styles.validText}>
                    Valid Until: Date Not Available
                  </Text>
                  <Text style={styles.addressText}>
                    Address: {userData?.address || "N/A"}
                  </Text>
                </View>
              </View>

              {/* Footer Section */}
              <View style={styles.footer}>
                <Text style={styles.footerText}>
                  This card is valid for 5 years from the date of issue.
                </Text>
                <Text style={styles.footerAddress}>
                  46, Sidco Industrial Estate, Coimbatore - 641021
                </Text>
              </View>
            </View>
          </View>
        </Modal>

      </ScrollView>
    </View>
  );
};

// Menu Item Component
// const MenuItem = ({icon, text}) => (
//   <TouchableOpacity style={styles.menuItem}>
//     <Icon name={icon} size={22} color="#A52A2A" />
//     <Text style={styles.menuText}>{text}</Text>
//   </TouchableOpacity>
// );

const styles = StyleSheet.create({
  container: {flex: 1, backgroundColor: '#fff', padding: 20},
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 20,
  },
  profileSection: {alignItems: 'center', marginBottom: 20},
  profileImage: {width: 80, height: 80, borderRadius: 40, marginBottom: 10},
  name: {fontSize: 20, fontWeight: 'bold'},
  username: {fontSize: 16, color: '#777'},
  contactInfo: {marginBottom: 20},
  contactRow: {flexDirection: 'row', alignItems: 'center', marginVertical: 5},
  contactText: {fontSize: 16, marginLeft: 8, color: '#666'},
  summarySection: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    backgroundColor: '#f8f8f8',
    borderRadius: 10,
    padding: 15,
    marginBottom: 20,
  },
  summaryBox: {alignItems: 'center', flex: 1},
  summaryValue: {fontSize: 18, fontWeight: 'bold'},
  summaryLabel: {fontSize: 14, color: '#666'},
  menuSection: {marginTop: 10},
  menuItem: {flexDirection: 'row', alignItems: 'center', paddingVertical: 12},
  menuText: {fontSize: 16, marginLeft: 10, color: '#333'},
  
  overlay: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "rgba(0,0,0,0.5)",
  },
  modalContainer: {
    backgroundColor: "white",
    width: "100%",
    borderRadius: 10,
    overflow: "hidden",
    alignItems: "center",
  },
  heaader: {
    backgroundColor: "#ff4081",
    width: "100%",
    flexDirection: "row", // Arrange items in a row
    alignItems: "center", // Align items vertically
    justifyContent: "center", // Align items horizontally
    padding: 15,
  },

  logo: {
    width: 50,
    height: 50,
    borderRadius: 25,
  },
  heaaderText: {
    fontSize: 22,
    fontWeight: "bold",
    color: "white",
    bottom: 25,

    marginLeft: 10,
    marginBottom: -50,
  },
  membershipText: {
    fontSize: 16,
    fontWeight: "bold",
    marginVertical: 5,
  },
  cardContent: {
    flexDirection: "row",
    alignItems: "center",
    padding: 15,
  },
  memprofileImage: {
    width: 60,
    height: 60,
    borderRadius: 30,
  },
  userInfo: {
    marginLeft: 10,
  },
  userName: {
    fontSize: 18,
    fontWeight: "bold",
  },
  validText: {
    fontSize: 14,
    fontWeight: "bold",
    color: "gray",
    marginTop: 5,
  },
  addressText: {
    fontSize: 14,
    color: "gray",
    marginTop: 5,
    flexWrap: "wrap",
  },
  footer: {
    backgroundColor: "#ff4081",
    width: "100%",
    padding: 10,
    alignItems: "center",
  },
  footerText: {
    fontSize: 14,
    color: "white",
  },
  footerAddress: {
    fontSize: 12,
    color: "white",
  },
  closeButton: {
    position: "absolute",
    right: 15,
    top: 15,
    backgroundColor: "white",
    width: 25,
    height: 25,
    borderRadius: 15,
    alignItems: "center",
    justifyContent: "center",
  },
  ProfilecloseButton: {
    position: "absolute",
    right: "10",
  },

  ProfilecloseButtonText: {
    color: "white",
    backgroundColor: "black",
    width: 35,
    height: 35,
    fontSize: 26,
    paddingLeft: 10,
    // left: 150,
    // marginVertical: 15,
    borderRadius: 25,
    fontWeight: "bold",
  },
});

export default Profile;
